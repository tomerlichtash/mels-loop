version: 2.1

executors:
  e2e-tester:
    docker:
      - image: mcr.microsoft.com/playwright:v1.23.1-focal
    working_directory: ~/repo
    resource_class: medium+

aliases:
  - &cache_restore
    restore_cache:
      keys:
        - v2-dependencies-{{ checksum "yarn.lock" }}

  - &cache_save
    save_cache:
      paths:
        - node_modules
        - ~/.cache/yarn
        - ./.next/cache      
      key: v2-dependencies-{{ checksum "yarn.lock" }}

  - &install_dependencies
    run: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn

jobs:
  e2e-codex:
    executor: e2e-tester
    parallelism: 2
    steps:
      - checkout
      - *cache_restore
      - *install_dependencies
      - *cache_save

      - run:
          name: Build
          command: |
            yarn build     

      - run:
          name: Install playwright
          command: |
            npx playwright install --with-deps chromium

      - run:
          name: Prepare logs directory
          command: |
            mkdir ~/test-results

      - run:
          name: Run Codex E2E tests
          command: |
            yarn test:e2e codex --project='Desktop Chrome' --retries=2 --workers=16
          # environment:
          #   PLAYWRIGHT_JUNIT_OUTPUT_DIR: ~/repo/apps/plugin/e2e/reports/junit/
          #   PLAYWRIGHT_JUNIT_OUTPUT_NAME: results.xml

      - store_test_results:
          path: ~/test-results

      # - store_artifacts:
      #     path: ~/repo/apps/plugin/e2e/recordings
      #     destination: artifacts

  e2e-articles:
    executor: e2e-tester
    parallelism: 2
    steps:
      - checkout
      - *cache_restore
      - *install_dependencies
      - *cache_save

      - run:
          name: Build
          command: |
            yarn build     

      - run:
          name: Install playwright
          command: |
            npx playwright install --with-deps chromium

      - run:
          name: Prepare logs directory
          command: |
            mkdir ~/test-results

      - run:
          name: Run Articles E2E tests
          command: |
            yarn test:e2e articles --project='Desktop Chrome' --retries=2
          # environment:
          #   PLAYWRIGHT_JUNIT_OUTPUT_DIR: ~/repo/apps/plugin/e2e/reports/junit/
          #   PLAYWRIGHT_JUNIT_OUTPUT_NAME: results.xml
  
      - store_test_results:
          path: ~/test-results

      # - store_artifacts:
      #     path: ~/repo/apps/plugin/e2e/recordings
      #     destination: artifacts

  build:
    docker:
      - image: cimg/node:14.18
    steps:
      - checkout
      - run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
          echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
      - run:
          name: Compute version number
          command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
      - run:
          name: yarn install
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ./.next/cache      
      - store_artifacts:
          path: yarn.lock
      - run:
          name: "Build"
          command: "yarn build"

  "clean-code":
    docker:
      - image: cimg/node:14.18
    steps:
      - checkout
      - run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
          echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
      - run:
          name: Compute version number
          command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
      - run:
          name: yarn install
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: yarn-deps-{{ checksum "yarn.lock" }}-{{ epoch }}
      - store_artifacts:
          path: yarn.lock
      - run:
          name: "ESLint"
          command: "yarn lint"

workflows:
  E2E:
    jobs:
      # - "build"
      # - "clean-code"
      - e2e-codex
      - e2e-articles
