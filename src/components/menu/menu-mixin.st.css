@namespace "Menu";

@st-import Menu from "./menu.st.css";
@st-import ButtonMixin from "../ui/button/button-mixin.st.css";

:vars {
	ListBgColor: transparent;
	ContentPadding: 1rem;
	ArrowColor: #fff;
	ViewPortBgColor: #fff;

	MenuTriggerPadding: 0;
	MenuTriggerTextSize: inherit;
	MenuTriggerRadius: 0;
	MenuTriggerBgColorHover: #c0c0c0;
	MenuTriggerTextColor: inherit;
	MenuTriggerTextColor_Hover: inherit;

	MenuItemTextColor: inherit;
	MenuItemTextColor_Hover: inherit;
	
	MenuItemPadding: 0;
	MenuItemRadius: 0;
	MenuItemLabelTextColor: inherit;
	MenuItemLabelTextColor_Hover: inherit;
	MenuItemBgColor_Hover: inherit;
	MenuItemLabelTextSize: inherit;
	MenuItemLabelLineHeight: inherit;
	MenuItemLabelTextWeight: inherit;
	MenuItemSubtitleLineHeight: inherit;
	MenuItemSubtitleTextSize: inherit;
}

.root {
	-st-extends: Menu;
}

.root::list {
	background-color: value(ListBgColor);
}
.root::menuContent {
	padding: value(ContentPadding);
}
.root::arrow {
	background-color: value(ArrowColor);
}
.root::viewport {
	background: value(ViewPortBgColor);
}

.root::menuTrigger {
	border-radius: value(MenuTriggerRadius);
}
.root::menuTrigger[data-state="open"] {
	background-color: value(MenuTriggerBgColorHover);
}
.root::triggerButton {
	-st-mixin: ButtonMixin(
		ButtonPadding value(MenuTriggerPadding),
		ButtonLabelTextSize value(MenuTriggerTextSize),
		ButtonTextColor value(MenuTriggerTextColor),
		ButtonTextColor_Hover value(MenuTriggerTextColor_Hover),		
	);
}

.root::menuItemButton {
	-st-mixin: ButtonMixin(
		ButtonPadding value(MenuItemPadding),
		ButtonRadius value(MenuItemRadius),
		ButtonTextColor value(MenuItemTextColor),
		ButtonTextColor_Hover value(MenuItemTextColor_Hover),
		ButtonLabelTextColor value(MenuItemLabelTextColor),
		ButtonLabelTextColor_Hover value(MenuItemLabelTextColor_Hover),
		ButtonBgColor_Hover value(MenuItemBgColor_Hover),
		ButtonLabelTextSize value(MenuItemLabelTextSize),
		ButtonLabelLineHeight value(MenuItemLabelLineHeight),
		ButtonLabelTextWeight value(MenuItemLabelTextWeight),
		ButtonSubtitleLineHeight value(MenuItemSubtitleLineHeight),
		ButtonSubtitleTextSize value(MenuItemSubtitleTextSize)
	);
}